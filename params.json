{"name":"Datatable Enhanced","tagline":"A jquery datatable Wrapper","body":"Simple jQuery Datatable Control\r\n===============================\r\n\r\nThis package offers you a simple way to use jquery.datatable. \r\nIt gives a fast access to selectable rows, allows to get the selection and adding items.\r\n\r\n**BETA VERSION** : feel free to repport any bug\r\n\r\nRequirement\r\n-----------\r\n\r\nYou just have to include jQuery and jQuery.dataTable. \r\nYou may use any theme you want for datatable.\r\n\r\n** Example of minimal requirement**\r\n\r\n```html\r\n\r\n    <link rel=\"stylesheet\"  href=\"jquery.dataTables.css\"/>\r\n    <link rel=\"stylesheet\"  href=\"dt.enhanced-controller.css\"/>\r\n\r\n    <script src=\"jquery-1.11.0.min.js\"></script>\r\n    <script src=\"jquery.dataTables.js\"></script>\r\n    <script src=\"./dt.enhanced-controller.js\"></script>\r\n    \r\n```\r\n\r\nBasic Usage\r\n-----------\r\n\r\nThe whole thing is controlable directly from javascript.\r\n\r\n\r\n```javascript\r\n\r\n    dt = new dtEnhanced.table({\r\n\r\n        fields:[\"id\",\"first-name\",\"last-name\"],\r\n        data  :[\r\n            {\"id\":1,\"first-name\":\"john\",\"last-name\":\"doe\"},\r\n            {\"id\":2,\"first-name\":\"unknown\",\"last-name\":\"smith\"},\r\n            {\"id\":2,\"first-name\":\"bob\",\"last-name\":\"\"}\r\n        ] \r\n\r\n    });\r\n\r\n    dt.show(\"#mydatatable\"); // append the table in the element with id \"mydatatable\"\r\n\r\n```\r\n\r\n**Render** \r\n\r\n![Image](../master/screens/readme-fig1.png?raw=true)\r\n\r\n\r\nManipulation of the selected rows\r\n---------------------------------\r\n\r\nThis library allows you to check some rows by clicking them. Then you can get the selection.\r\n\r\nJust add \"x\" in the field configuration and a button : \r\n\r\n```javascript\r\n\r\ndt = new dtEnhanced.table({\r\n\r\n        fields:[\"x\",\"id\",\"first-name\",\"last-name\"],\r\n        data  :[\r\n            {\"id\":1,\"first-name\":\"john\",\"last-name\":\"doe\"},\r\n            {\"id\":2,\"first-name\":\"unknown\",\"last-name\":\"smith\"},\r\n            {\"id\":2,\"first-name\":\"bob\",\"last-name\":\"\"}\r\n        ] \r\n\r\n    });\r\n\r\n    dt.show(\"#mydatatable\");\r\n\r\n    $(\"#myButton\").click(function(){\r\n        console.log(dt.getSelection());    \r\n    });\r\n\r\n```\r\n\r\n**Render** \r\n\r\n![Image](../master/screens/readme-fig2.png?raw=true)\r\n\r\n\r\n**Ouput when click** \r\n\r\n![Image](../master/screens/readme-fig3.png?raw=true)\r\n\r\n\r\n\r\nCustomize dataTable Options\r\n---------------------------\r\n\r\nWhen calling ``dt.show(\"#element\")`` you can use as second parameter the config to pass to the datatable :\r\n\r\n``dt.show(\"#element\",{/*datatable config*/});``\r\n\r\nis equivalent to \r\n\r\n``$(\"#element\").html($(theTable)); $(theTable).datatable({/*datatable config*/});``\r\n\r\n\r\n\r\nAdding item dynamically\r\n-----------------------\r\n\r\nOnce your datatable lives you still can add items with the method \r\n\r\n``dt.addItem(/* one item or an array of items */);``\r\n\r\nFor instance you may add items selected in one table to another\r\n\r\n```javascript\r\n\r\n$(\"#myButton\").click(function(){\r\n    \r\n    dt1.addItem( dt2.getSelection() );\r\n    dt2.clearSelection(); // => will be implemented very soon \r\n\r\n});\r\n\r\n```\r\n\r\nTODO : include online example\r\n\r\n\r\nConfiguration\r\n-------------\r\n\r\n```javascript\r\n\r\nnew dtEnhanced.table({\r\n    \r\n    // The data that will fill the table\r\n    // it's an array of objects. Each object will be one row of the table\r\n    \"data\"          : [],\r\n\r\n    // This defines how yo display the data and what data to display\r\n    // it's an array of objects. Each object will be one column of the table\r\n    // see below for more information about fields\r\n    \"fields\"        : [],\r\n\r\n    // handler triggered when the selection changes\r\n    \"selectionChange\" : function(){\r\n        console.log(this.getSelection());\r\n    },\r\n\r\n    // Defines if the rows are selectable\r\n    // Possible values :\r\n    //  - \"single\"  : only one row can be selected\r\n    //  - \"multi\"   : unbound number of rows can be selected\r\n    //  - false     : no selection\r\n    //  - int value : define the max number of rows that can be selected\r\n    \"selectable\"    : \"single\"\r\n});\r\n\r\n```\r\n\r\n\r\nFields Configuration\r\n--------------------\r\n\r\nA field is a column of the table. In the configuration a field can be either of :\r\n\r\n* an object configuration : see options below\r\n* a string : see below for example\r\n* an instance of dtEnhanced.field\r\n* a special string : \"x\" for selection checkbox\r\n\r\n\r\n```javascript\r\n\r\n    \"fields\"  : [\r\n\r\n        // Object configuration case\r\n        {\r\n            // name of the key you want to show from the data\r\n            // in this case we want to show data[\"id\"]\r\n            \"name\"      : \"id\",\r\n\r\n            // width in pixels of the column. Leave it null for auto sizing\r\n            \"width\"     : 5,\r\n\r\n            // a render function to customize what we want to show\r\n            // if null we just will take the value of data[\"id\"]\r\n            // in this example we show the id as a clickable link\r\n            \"render\"    : function(){ return \"<a href='http://.../item?id=\" + value + \"'>\" + value + \"</a> \"; },\r\n\r\n            // The text to show in the header. If null it will be replaced by the value of \"name\"\r\n            \"header\"    : null,\r\n\r\n            // One or more css class to apply to the column ; split by spaces\r\n            // usable in css or js with : \"table.dataTable>tr>td.myclass\"\r\n            \"class\"     : \"myclass\"\r\n        },\r\n\r\n\r\n\r\n        // string case\r\n        // this is a shortcut for {\"name\":\"first-name\"}\r\n        \"first-name\", \r\n\r\n\r\n\r\n        // instance of dtEnhanced.field case\r\n        new dtEnhanced.field({\"name\" : \"last-name\"}),\r\n\r\n        // special string \"x\" case\r\n        // this is a shortcut for new dtEnhanced.checkboxField();\r\n        \"x\"\r\n\r\n    ]\r\n\r\n```\r\n\r\n\r\n\r\nROADMAP\r\n-------\r\n\r\n* [x] Field.class usable with a callback\r\n* [ ] intuitive serverside processing\r\n* [x] shift click for multi select\r\n* [ ] removeItem()\r\n* [ ] clearSelection()\r\n* [ ] column order\r\n* [ ] serialisation\r\n* [ ] un/select all row from header\r\n* [ ] some examples online : github page\r\n* [ ] bower inclusion\r\n* [ ] minification\r\n* [x] searcheable / visible / orderable columns\r\n* [ ] groupable headers\r\n* [ ] row callback for customizing tr class (eg : one color per row type)\r\n* [ ] row grouping\r\n* [x] row detail (show/hide)\r\n* [ ] tooltip\r\n* [ ] colmun alignment\r\n* [ ] update the readme\r\n* [x] make datatable api easyly reachable\r\n* [ ] check requirement (jquery/datatable and plugins)\r\n* [x] selection memory\r\n* [x] selection count in sdom\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}